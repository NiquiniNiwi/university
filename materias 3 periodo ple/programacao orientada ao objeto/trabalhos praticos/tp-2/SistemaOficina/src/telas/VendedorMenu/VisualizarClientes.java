/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.VendedorMenu;

import javax.swing.JLabel;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import sistemaoficina.Funcionarios.Vendedor;
import sistemaoficina.Clientes.Cliente;

/**
 *
 * @author marcus
 */
public class VisualizarClientes extends javax.swing.JFrame {
    
    private int space = 20;
    private MenuVendedor menuVendedor;
    private Vendedor vendedor;
    private AtualizaCliente atualizaCli;
    
    /**
    * Responsavel por contruir a lista de clientes que esta na variavel vendedor,
    * Caso não exista nada, sera printado uma mensagem
    */
    public void showClientes(){
        List<Cliente> cli = vendedor.getListaClientes();
        
        if(cli.isEmpty()) {
            jScrollPane1.setVisible(false);
            space+=20;
            JLabel label = new javax.swing.JLabel();
            label.setVisible(true);
            label.setText("Nenhum cliente cadastrado!");
            label.setSize(1000,40);
            label.setLocation(50, space);
            getContentPane().add(label);
        }
        
        else {
            String text;
            DefaultListModel model = new DefaultListModel();
            for(Cliente cliente : cli){
                text = String.format("Nome: %-100s CPF: %-20s\n", cliente.getNome(), cliente.getCpf());
                model.addElement(text);
            }
            ListaDeClientes.setModel(model);
        }
    }

    /**
     * Creates new form VisualizarClientes
     */
    public VisualizarClientes() {
        initComponents();
    }

    /**
    * Transfere a variavel vendedor para a tela this
    * @param vendedor - Variavel que foi alterada ou não
    */
    public void setVendedor(Vendedor vendedor) {
        this.vendedor = vendedor;
        showClientes();
    }
    
    /**
    * Transfere para a tela Visualizar Ordens Pendentes a referencia da tela MenuVendedor
    * e a variavel Vendedor utilizada no menu
    * @param menuVendedor - Referente a tela anterior
    * @param vendedor - Variavel utilizada
    */
    public void enviaVendedor(MenuVendedor menuVendedor, Vendedor vendedor) {
        this.vendedor = vendedor;
        this.menuVendedor = menuVendedor;
        showClientes();
    } 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Voltar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaDeClientes = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        InputCpf = new javax.swing.JTextField();
        Confirmar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Voltar.setText("Voltar ao Menu");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        jLabel2.setText("CLIENTES");

        jScrollPane1.setViewportView(ListaDeClientes);

        jLabel1.setText("Insira o CPF do Cliente que deseja alterar:");

        Confirmar.setText("Confirmar");
        Confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 329, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(334, 334, 334))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Voltar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Confirmar)
                                .addGap(18, 18, 18))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(InputCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InputCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Voltar)
                    .addComponent(Confirmar))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Volta para a tela anterior
    */
    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        this.setVisible(false);
        menuVendedor.setVendedor(vendedor);
        menuVendedor.setVisible(true);
    }//GEN-LAST:event_VoltarActionPerformed

    /**
    * Cria a tela referente as alteraçoes dos campos alteraveis do cliente
    */
    private void ConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarActionPerformed
        if(vendedor.getCliente(InputCpf.getText()) == null) {
            JOptionPane.showMessageDialog(null, "CPF digitado não refere a nenhum cliente", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        else {
            atualizaCli = new AtualizaCliente();
            atualizaCli.setLocationRelativeTo(null);
            atualizaCli.setVisible(true);
            atualizaCli.setResizable(false);
            this.setVisible(false);   

            atualizaCli.enviaVendedor(this, vendedor, InputCpf.getText());
        }
    }//GEN-LAST:event_ConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualizarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualizarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualizarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualizarClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisualizarClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Confirmar;
    private javax.swing.JTextField InputCpf;
    private javax.swing.JList<String> ListaDeClientes;
    private javax.swing.JButton Voltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
