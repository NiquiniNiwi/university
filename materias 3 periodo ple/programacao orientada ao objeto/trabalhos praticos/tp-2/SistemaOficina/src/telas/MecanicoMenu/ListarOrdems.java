/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.MecanicoMenu;

import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import sistemaoficina.Funcionarios.Mecanico;
import sistemaoficina.Funcionarios.Vendedor;
import sistemaoficina.Servicos.Ordem;

/**
 *
 * @author maceg
 */
public class ListarOrdems extends javax.swing.JDialog {
    //Variavel para o Menu Mecanico oq permite torna-lo visivel novamente
    private MenuMecanico menu_mecanico;    
    //Variavel mecanico que permite manter as alteracoes a uma tela mesmo depois dela ter sido fechada
    private Mecanico mecani;
    private Vendedor vende;
    /**
     * Creates new form ListarOrdems
     */
    //Construtor basico criado pelo NetBeans
    public ListarOrdems(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    //Construtor criado para iniciar os componentes da tela, nao sao necessarios outros parametros
    public ListarOrdems() {
        
        initComponents();
    }
    //Construtor que recebe diferentes items de forma a manter seus ponteiro e permitir alteracoes dos campos 
    public ListarOrdems(MenuMecanico menu_mecanico, Mecanico mecani, Vendedor vendedor) {
        //Chamada do construtor inicial para iniciar os compononentes
        this();        
        //Recebendo o ponteiro do menu_mecanico da tela anterior
        this.menu_mecanico = menu_mecanico;
        //Recebendo endereco de memoria da variavel mecanico que estava na tela anterior
        this.mecani = mecani;
        this.vende = vendedor;
        //Metodo utilizado para a montagem da JTable na tela, recebe o tamanho da lista de forma a alocar dinamicamente a tabela
        showOrdens(vende.getListaOrdens().size());
        
      
    }
    //Metodo utilizado para setar o numero de linhas da tabela, bem como adicionar o conteudo dessas
    public void showOrdens(int nOrdems){
        //Pegando o modelo da JTable que ja foi criada, permitindo altera-lo
        DefaultTableModel dtmProdutos = (DefaultTableModel)jTable2.getModel();
        //Adicionando o numero de linhas dinamicamente de acordo com nOrdems, ou seja, o numero de Ordems que o vendedor contem
        for(int i = 0; i<nOrdems; i++){
            //Chamando a montagem da tabela apenas para listas que foram aprovadas
            if(vende.getListaOrdens().get(i).getAprovacao() == true){            
                dtmProdutos.addRow(criacaoTabela(vende.getListaOrdens().get(i)));
            }
            else continue;
        
        }
        
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        inputOrdem = new javax.swing.JTextField();
        confirmServico = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleção de Ordem");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Tipo", "Aprovação cliente"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        jLabel1.setText("Código da Ordem");

        confirmServico.setText("Salvar");
        confirmServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmServicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(confirmServico, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(inputOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmServico, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     //Criacao do modelo para jTable
    public Object[] criacaoTabela(Ordem ordem){
        //Criando uma lista de objetos que recebem os campos da Ordem que se deseja mostrar
        Object[] rowData = {ordem.getCodeOrdem(), ordem.getTipo(), ordem.getAprovacao()};
        //Retorna um objeto para ser adicionado a JTable
        return rowData;
    
    }
    
    public boolean verificaCampoInt(JTextField text){
        int aux;
        try{
            aux = Integer.parseInt(text.getText());
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Campo invalido", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }    
    
    //Botao que confirma a adicao de um servico
    private void confirmServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmServicoActionPerformed
        // TODO add your handling code here:
        //Torna a janela invisivel, de forma a ficar mais "limpa" a tela
        if(vende.getListaOrdens().size() != 0){
            if(verificaCampoInt(inputOrdem) == true){               
                this.setVisible(false);
                //Torna a tela anterior visivel
                menu_mecanico.setVisible(true);
                //Adicionando a ordem escolhida ao mecanico, esta sendo pega do campo de texto, a seguir esta sendo convertido para int, para ser possivel busca-lo por meio de seu codigo na lista de ordems do vendedor
                    mecani.setOrdem(vende.getOrdem(Integer.parseInt(inputOrdem.getText())));
                    inputOrdem.setText("");
                    JOptionPane.showMessageDialog(null, "Ordem salva com sucesso.", "Message", JOptionPane.INFORMATION_MESSAGE);
                }
                else  inputOrdem.setText("");
            }
            else  JOptionPane.showMessageDialog(null, "Não há ordems", "Erro", JOptionPane.ERROR_MESSAGE);
            inputOrdem.setText("");       
       
    }//GEN-LAST:event_confirmServicoActionPerformed
    //Acao para quando a janela for fechada
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        //Torna a tela anterior visivel
        menu_mecanico.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListarOrdems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListarOrdems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListarOrdems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListarOrdems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ListarOrdems dialog = new ListarOrdems(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmServico;
    private javax.swing.JTextField inputOrdem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
