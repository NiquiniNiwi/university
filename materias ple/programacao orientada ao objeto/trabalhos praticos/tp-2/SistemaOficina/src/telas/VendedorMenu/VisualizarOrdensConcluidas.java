/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas.VendedorMenu;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sistemaoficina.Funcionarios.Vendedor;
import sistemaoficina.Servicos.Ordem;

/**
 *
 * @author Daniel
 */
public class VisualizarOrdensConcluidas extends javax.swing.JFrame {
    private Vendedor vendedor;
    private MenuVendedor menuVendedor;
    /**
     * Creates new form VisualizarOrdensConcluidas
     */
    public VisualizarOrdensConcluidas() {
        initComponents();
    }
    
    /**
    * Função responsavel por finalizar e adicionar os campos necessarios para exibir 
    * a tabela
    */
    public void showOrdensConcluidas(){
        int count = 0;
        TabelaOrdens.setVisible(true);
        List<Ordem> ordens = vendedor.getListaOrdens();
        DefaultTableModel model = (DefaultTableModel)TabelaOrdens.getModel();
        for(Ordem ordem : ordens){
            if(ordem.getEstado()) {
                Object[] rowData = {ordem.getCodeOrdem(), ordem.getCpf()};
                model.addRow(rowData);
                count++;
            }
        }
        
        if(count == 0) {
            TabelaOrdens.setVisible(false);
        }
    }
    
    /**
    * Transfere para a tela Visualizar Ordens Pendentes a referencia da tela MenuVendedor
    * e a variavel Vendedor utilizada no menu
    * @param menuVendedor - Referente a tela anterior
    * @param vendedor - Variavel utilizada
    */
    public void enviaVendedor(MenuVendedor menuVendedor, Vendedor vendedor) {
        this.vendedor = vendedor;
        this.menuVendedor = menuVendedor;
        showOrdensConcluidas();
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaOrdens = new javax.swing.JTable();
        Voltar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ORDENS CONCLUIDAS");

        TabelaOrdens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "CPF do Cliente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaOrdens.getTableHeader().setReorderingAllowed(false);
        TabelaOrdens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaOrdensMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelaOrdens);

        Voltar.setText("Voltar ao Menu");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        jLabel2.setText("OBS: Para deletar a ordem do banco de dados é necessario apenas clicar nela");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Voltar)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(306, 306, 306)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(Voltar)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * Volta para a tela anterior
    */
    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        this.setVisible(false);
        menuVendedor.setVendedor(vendedor);
        menuVendedor.setVisible(true);
    }//GEN-LAST:event_VoltarActionPerformed

    /**
    * Acompanha o evento de click para executar a exclusão das ordens
    */
    private void TabelaOrdensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaOrdensMouseClicked
        for(int i = 0; i < TabelaOrdens.getRowCount(); i++) {
            if(TabelaOrdens.isRowSelected(i)) {
                String mensage = "Deseja Excluir a ordem? Uma vez Excluida não é possivel alterar";
                String title = "Confirmação";
                int reply = JOptionPane.showConfirmDialog(null, mensage, title, JOptionPane.YES_NO_OPTION);
                if(reply == JOptionPane.YES_OPTION) {
                    vendedor.removeOrdem(vendedor.getOrdem((int)TabelaOrdens.getValueAt(i, 0)));
                    showOrdensConcluidas();
                }
            }
        }
    }//GEN-LAST:event_TabelaOrdensMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisualizarOrdensConcluidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisualizarOrdensConcluidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisualizarOrdensConcluidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisualizarOrdensConcluidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisualizarOrdensConcluidas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelaOrdens;
    private javax.swing.JButton Voltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
